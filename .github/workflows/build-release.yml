name: Build and Release UWP & Console App

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: windows-latest

    permissions:
      contents: write  # Allow pushing to the repository
      issues: write    # Required for @semantic-release/github
      pull-requests: write  # Required for @semantic-release/github

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full Git history for semantic-release

      - name: Configurer MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Restaurer les dépendances NuGet
        run: nuget restore EasySave.sln

      - name: Compiler l'application en mode Release
        run: msbuild EasySave.sln /p:Configuration=Release /p:Platform="Any CPU"

      - name: Publier EasySaveConsole (Console App) avec le profil de publication
        run: dotnet publish EasySaveConsole/EasySaveConsole.csproj /p:PublishProfile=FolderProfile.pubxml

      - name: Publier CryptoSoft (Console App) avec le profil de publication
        run: dotnet publish CryptoSoft/CryptoSoft.csproj /p:PublishProfile=FolderProfile.pubxml

      - name: Publier EasySaveGUI (UWP) avec le profil de publication
        run: dotnet publish EasySaveGUI/EasySaveGUI.csproj /p:PublishProfile=FolderProfile.pubxml

      - name: Télécharger l'artefact
        uses: actions/upload-artifact@v4
        with:
          name: EasySave-Apps
          path: |
            EasySaveConsole/publish/
            EasySaveGUI/publish/
            CryptoSoft/publish/

  release:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Allow pushing to the repository
      issues: write    # Required for @semantic-release/github
      pull-requests: write  # Required for @semantic-release/github

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full Git history for semantic-release

      - name: Configurer Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Installer semantic-release et plugins
        run: npm install -g semantic-release @semantic-release/changelog @semantic-release/git

      - name: Exécuter semantic-release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release | tee release-output.txt
          echo "RELEASE_TAG=$(grep -oP 'Published release \K.*' release-output.txt | head -1)" >> $GITHUB_ENV

      - name: Télécharger l'artefact du build
        uses: actions/download-artifact@v4
        with:
          name: EasySave-Apps
          path: package/

      - name: Créer une Release GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: package/**
          tag_name: ${{ env.RELEASE_TAG }}  # Use the captured tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}