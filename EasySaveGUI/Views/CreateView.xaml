<UserControl x:Class="EasySaveGUI.Views.CreateView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:EasySaveGUI.Views"
      xmlns:viewModels="clr-namespace:EasySaveGUI.ViewModels"
      d:DataContext="{d:DesignInstance Type=viewModels:CreateViewModel}"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>

        <!-- Custom Style for ListBox -->
        <Style x:Key="CustomListBoxStyle" TargetType="ListBox">
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="LightGray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="SelectionMode" Value="Extended" />
            <!-- Enable multi-selection -->
            <Style.Triggers>
                <Trigger Property="HasItems" Value="False">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock Foreground="{DynamicResource Text}" 
                                   FontSize="12"
                                   Text="{DynamicResource NoItem}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Custom Style for ListBoxItem -->
        <Style x:Key="CustomListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="BorderBrush" Value="{DynamicResource Card}" />
            <Setter Property="BorderThickness" Value="0 0 0 2" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Foreground" Value="{DynamicResource Text}" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#959595" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#787878" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CustomSnackbarContainerStyle" TargetType="Border">
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Background" Value="#4CAF50"/>
            <Setter Property="Padding" Value="5,5,5,5"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" 
                  Direction="320" 
                  ShadowDepth="5" 
                  Opacity="0.5" 
                  BlurRadius="10"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform Y="100"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSnackbarActive}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y"
                             From="100" To="0" 
                             Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y"
                             From="0" To="100" 
                             Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="30" FontWeight="Bold" Text="{DynamicResource TitleCreate}" Foreground="{DynamicResource Text}"/>
        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20,75,0,0" Text="{DynamicResource NameTitleCaseCreate}" Foreground="{DynamicResource Text}"/>
        <TextBox HorizontalAlignment="Left" VerticalAlignment="Top" Margin="150,75,0,0" Text="{Binding Name, Mode=TwoWay}" Width="200" Height="23"/>

        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20,125,0,0" Text="{DynamicResource SourcePathTitleCaseCreate}" Foreground="{DynamicResource Text}"/>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="150,125,0,0">
            <TextBox Text="{Binding SourcePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="200"/>
            <Button Style="{DynamicResource ButtonStyle}" Command="{Binding BrowseSourcePathCommand}" Width="30" Height="20" Padding="0">
                <Image Source="../assets/folder-icon.png" Width="15" Height="15"/>
            </Button>
        </StackPanel>

        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20,175,0,0" Text="{DynamicResource DestPathTitleCaseCreate}" Foreground="{DynamicResource Text}"/>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="150,175,0,0">
            <TextBox Text="{Binding DestinationPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="200"/>
            <Button Style="{DynamicResource ButtonStyle}" Command="{Binding BrowseDestPathCommand}" Width="30" Height="20" Padding="0">
                <Image Source="../assets/folder-icon.png" Width="15" Height="15"/>
            </Button>
        </StackPanel>

        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20,225,0,0" Text="{DynamicResource BackupTypeTitleCaseCreate}" Foreground="{DynamicResource Text}"/>
        <ComboBox HorizontalAlignment="Left" VerticalAlignment="Top" Margin="150,225,0,0" 
                  ItemsSource="{Binding AvailableBackupTypes}" 
                  SelectedItem="{Binding BackupType, Mode=TwoWay}" 
                  Width="200"/>

        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20,275,0,0" Text="{DynamicResource EncryptionTitleCaseCreate}" Foreground="{DynamicResource Text}"/>
        <CheckBox HorizontalAlignment="Left" VerticalAlignment="Top" Margin="100,275,0,0" Background="White" IsChecked="{Binding Encrypted, Mode=TwoWay}"/>
        <ListBox HorizontalAlignment="Left" VerticalAlignment="Top" Margin="150,275,0,0" Width="200" Height="100"
         ItemsSource="{Binding ListItems}">
            <ListBox.Style>
                <Style TargetType="ListBox">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Encrypted}" Value="True">
                            <DataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger.Setters>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Encrypted}" Value="False">
                            <DataTrigger.Setters>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Style>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding IsSelected}" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="5,0"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>


        <!-- Bouton Create -->
        <Button Content="{DynamicResource CreateButtonFinal}"
                HorizontalAlignment="Center" 
                VerticalAlignment="Bottom"
                Style="{DynamicResource ClassicButtonStyle}"
                Margin="0,0,0,20"
                Width="100"
                FontSize="16"
                Background="{DynamicResource List}"
                BorderBrush="{DynamicResource Card}"
                Foreground="{DynamicResource Text}"
                Command="{Binding CreateCommand}" />

        <Border Style="{StaticResource CustomSnackbarContainerStyle}"
                VerticalAlignment="Bottom"
                HorizontalAlignment="Right"
                Margin="0,0,20,20">
            <materialDesign:Snackbar x:Name="SaveSnackbar"
             MessageQueue="{Binding MessageQueue}"
             Background="Transparent"
             Foreground="White"
             FontSize="14"
             HorizontalContentAlignment="Center"
             VerticalContentAlignment="Center" />
        </Border>
    </Grid>
</UserControl>
